<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Smooth Voxel Modeling</title>
 <link href="http://jdily.github.io/atom.xml" rel="self"/>
 <link href="http://jdily.github.io/"/>
 <updated>2015-12-15T10:12:34-08:00</updated>
 <id>http://jdily.github.io</id>
 <author>
   <name>I-Chao Shen</name>
   <email>jdilyshen@gmail.com</email>
 </author>

 
 <entry>
   <title>Shape List</title>
   <link href="http://jdily.github.io/draft/2015/12/15/Shape-Repo/"/>
   <updated>2015-12-15T00:00:00-08:00</updated>
   <id>http://jdily.github.io/draft/2015/12/15/Shape-Repo</id>
   <content type="html">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Image&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;airplane&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/airplane.svg” alt=”airplane”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;airplane2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/airplane2.svg” alt=”airplane2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-down&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-down.svg” alt=”arrow-down”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-down-left&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-down-left.svg” alt=”arrow-down-left”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-down-right&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-down-right.svg” alt=”arrow-down-right”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-left&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-left.svg” alt=”arrow-left”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-right&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-right.svg” alt=”arrow-right”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-up.svg” alt=”arrow-up”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-up-left&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-up-left.svg” alt=”arrow-up-left”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;arrow-up-right&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/arrow-up-right.svg” alt=”arrow-up-right”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;atomic&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/atomic.svg” alt=”atomic”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bell&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/bell.svg” alt=”bell”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bone&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/bone.svg” alt=”bone”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bookmark&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/bookmark.svg” alt=”bookmark”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bubble&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/bubble.svg” alt=”bubble”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bunny&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/bunny.svg” alt=”bunny”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;checkmark&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/checkmark.svg” alt=”checkmark”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;chess&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/chess.svg” alt=”chess”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;circle109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/circle109.svg” alt=”circle109”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cloud&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/cloud.svg” alt=”cloud”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cloud2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/cloud2.svg” alt=”cloud2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;clubs&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/clubs.svg” alt=”clubs”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cross103&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/cross103.svg” alt=”cross103”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;crown&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/crown.svg” alt=”crown”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;diamonds&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/diamonds.svg” alt=”diamonds”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;duck&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/duck.svg” alt=”duck”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dumbbell&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/dumbbell.svg” alt=”dumbbell”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fish&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/fish.svg” alt=”fish”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;folder&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/folder.svg” alt=”folder”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glass&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/glass.svg” alt=”glass”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glass2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/glass2.svg” alt=”glass2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glass3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/glass3.svg” alt=”glass3”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;guitar&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/guitar.svg” alt=”guitar”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hand&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/hand.svg” alt=”hand”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;headphone&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/headphone.svg” alt=”headphone”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;heart&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/heart.svg” alt=”heart”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;heart298&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/heart298.svg” alt=”heart298”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keyhole&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/keyhole.svg” alt=”keyhole”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;maple&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/maple.svg” alt=”maple”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;meg&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/meg.svg” alt=”meg”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;megaphone&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/megaphone.svg” alt=”megaphone”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;muscle&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/muscle.svg” alt=”muscle”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;note2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/note2.svg” alt=”note2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;note3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/note3.svg” alt=”note3”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;phone&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/phone.svg” alt=”phone”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;phone-hang-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/phone-hang-up.svg” alt=”phone-hang-up”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;phone-hang-up2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/phone-hang-up2.svg” alt=”phone-hang-up2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pin&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/pin.svg” alt=”pin”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;plane3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/plane3.svg” alt=”plane3”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;play3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/play3.svg” alt=”play3”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;plug&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/plug.svg” alt=”plug”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;plus81&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/plus81.svg” alt=”plus81”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;power&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/power.svg” alt=”power”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;quill&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/quill.svg” alt=”quill”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rating&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/rating.svg” alt=”rating”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;redo&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/redo.svg” alt=”redo”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;redo2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/redo2.svg” alt=”redo2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;rocket&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/rocket.svg” alt=”rocket”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;screwdriver&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/screwdriver.svg” alt=”screwdriver”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;spades&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/spades.svg” alt=”spades”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;star-full&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/star-full.svg” alt=”star-full”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;star175&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/star175.svg” alt=”star175”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;star177&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/star177.svg” alt=”star177”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;svg&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/svg.svg” alt=”svg”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tabletennis&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/tabletennis.svg” alt=”tabletennis”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;teeth&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/teeth.svg” alt=”teeth”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;teeth2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/teeth2.svg” alt=”teeth2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;thumb&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/thumb.svg” alt=”thumb”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tool&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/tool.svg” alt=”tool”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;triangle36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/triangle36.svg” alt=”triangle36”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tshirt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/tshirt.svg” alt=”tshirt”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;turtle&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/turtle.svg” alt=”turtle”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;twitter&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/twitter.svg” alt=”twitter”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;umbrella&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/umbrella.svg” alt=”umbrella”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;undo&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/undo.svg” alt=”undo”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;undo2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/undo2.svg” alt=”undo2”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;user&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/user.svg” alt=”user”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;weight&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/weight.svg” alt=”weight”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wrench&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&amp;lt;img width=100px height=100px src=”http://jdily.github.io/images/shapes/wrench.svg” alt=”wrench”/&amp;gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Dec 09, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/12/09/Dec-09-Meeting-Note/"/>
   <updated>2015-12-09T00:00:00-08:00</updated>
   <id>http://jdily.github.io/meeting/2015/12/09/Dec-09-Meeting-Note</id>
   <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Feature problem:
    &lt;ul&gt;
      &lt;li&gt;the window size matters :
        &lt;ul&gt;
          &lt;li&gt;how large the window size can help us to identify  singularity visually?&lt;/li&gt;
          &lt;li&gt;can the larger window size make the feature separable in the high dimensional space?&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;some small hacks during the singularity point transfer process
        &lt;ul&gt;
          &lt;li&gt;pick the closest point that is not on the flat region, i.e. always assign the singular label to either concave or convex corner…&lt;/li&gt;
          &lt;li&gt;think about the problem: if the two neighbouring samples are very similar, but one is labeled as positive and one is not, it will be very hard to separate them with classifier..&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;feature augment:
        &lt;ul&gt;
          &lt;li&gt;one possible direction is to augment the feature with pixel value in the local window.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The evaluation should focus on doing the reasonable thing for a big shape set, not particularly on a single shape..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;todos&quot;&gt;Todos&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;come up visual results and comparisons for evaluating window size for local shape pattern…&lt;/li&gt;
  &lt;li&gt;do the small additional step for transferring the singular points.&lt;/li&gt;
  &lt;li&gt;experiment with the context less shape feature.&lt;/li&gt;
  &lt;li&gt;collect more shapes, and generate results automatically.&lt;/li&gt;
  &lt;li&gt;try to augment the current feature..&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Dec 02, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/12/02/Dec-02-Meeting-Note/"/>
   <updated>2015-12-02T00:00:00-08:00</updated>
   <id>http://jdily.github.io/meeting/2015/12/02/Dec-02-Meeting-Note</id>
   <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Sampling problem : First I raised some issues that I also talked about in the email. And the reason why the [0,1] range is not guaranteed.
    &lt;ul&gt;
      &lt;li&gt;possible solution is to always find diagonal points as reference, but with ambiguities.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The fitting curve : The current fitted curve are too rough, we have to finely fitted it by increase the detail of the fitting curve.&lt;/li&gt;
  &lt;li&gt;Generate data for labeling singularity:
    &lt;ul&gt;
      &lt;li&gt;direct labeling on the resampled polygon is not right, it’s not clear which points should be assigned as singularity.&lt;/li&gt;
      &lt;li&gt;The singularity should be labeled on fitted polygon, and then try to transfer to resampled polygon.
        &lt;ul&gt;
          &lt;li&gt;one method to do is find the closest sample in the resampled polygon.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;singularity should be judged directly on the bezier curve.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Some notes:
    &lt;ul&gt;
      &lt;li&gt;we should be careful about choosing the resolution. The resolution should be high enough to capture the geometry detail in the original shape.
        &lt;ul&gt;
          &lt;li&gt;one check is that if we singular points on the continuous shape results in a single sample, then it means we don’t have enough resolution..&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;todos&quot;&gt;Todos&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;fitted a smoother curve to the original shape&lt;/li&gt;
  &lt;li&gt;try to automatically pick the discontinuities on the bezier curves..&lt;/li&gt;
  &lt;li&gt;transfer these discontinuities to the resampled polygon as label…&lt;/li&gt;
  &lt;li&gt;extract feature and label to train classifier, train like a face detector (discuss with Zhaowen in detail.)&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Nov 18, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/11/18/Nov-18-meeting-note/"/>
   <updated>2015-11-18T00:00:00-08:00</updated>
   <id>http://jdily.github.io/meeting/2015/11/18/Nov-18-meeting-note</id>
   <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;There are mainly two parts in today’s discussion:
    &lt;ul&gt;
      &lt;li&gt;parameter learning for single shape.&lt;/li&gt;
      &lt;li&gt;parameter learning for multiple shape.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-single-shape&quot;&gt;For single shape&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;check the parameter learning optimization on some other example shapes.&lt;/li&gt;
  &lt;li&gt;compare the learned parameter with manually set parameter after several iterations..
    &lt;ul&gt;
      &lt;li&gt;This is to prove that the parameter learning is useful that we can get results more similar to ground truth shape.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;check whether we should keep doing parameter learning iteration by iteration. To check this, we can compare:
    &lt;ul&gt;
      &lt;li&gt;multiple iterations of reconstructions with fixed parameters learned from single iteration parameter learning.&lt;/li&gt;
      &lt;li&gt;multiple iterations of reconstructions with updated parameters.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;We also have to check whether the convergence of both reconstruction optimization (i.e. optimize t), and parameter learning optimization (i.e. optimize $\sigma_L$, $\sigma_B$, and $C$)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;for-multiple-shape&quot;&gt;For multiple shape&lt;/h3&gt;
&lt;p&gt;Assume for each shape, we get corresponding parameters  ($\sigma_L$, $\sigma_B$, and $C$), or parameter sets (multiple $\sigma_L$, $\sigma_B$, and $C$ across different iteration.), how we combine these information, and for a new shape, we can come up new parameters for it?&lt;/p&gt;

&lt;h4 id=&quot;learning-approaches&quot;&gt;Learning approaches&lt;/h4&gt;
&lt;p&gt;We can utilize multi-class classification algorithm like linear classification or SVM, classify some template shape we have, with their corresponding parameters. 
And for each new shape, we can predict the possibilities of them being different classes, and use that as confident to weighted average the parameters.&lt;/p&gt;

&lt;h4 id=&quot;feature-space&quot;&gt;Feature space&lt;/h4&gt;
&lt;p&gt;For learning parameters across different shapes, we need to find the right parameter spaces for &lt;strong&gt;global&lt;/strong&gt; or &lt;strong&gt;local&lt;/strong&gt; structure.
One possible direction is to extract the histogram of curvature, or the laplacian vectors.&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;run the parameter learning only 1 iteration for different shapes, and see the behaviour.&lt;/li&gt;
  &lt;li&gt;do the parameter learning for multiple iterations, and compare the reconstruct result with 
    &lt;ul&gt;
      &lt;li&gt;fix parameter (only one iteration parameter learning) and &lt;/li&gt;
      &lt;li&gt;manually set parameter.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;after getting the above steps, I can  start to work on learning from multiple shapes, both training and testing step…&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>New energy and some results</title>
   <link href="http://jdily.github.io/progress/2015/11/14/New-energy-formulation-result/"/>
   <updated>2015-11-14T00:00:00-08:00</updated>
   <id>http://jdily.github.io/progress/2015/11/14/New-energy-formulation-result</id>
   <content type="html">&lt;h2 id=&quot;new-optimization-function-with-four-terms&quot;&gt;New Optimization function with four terms&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; F(\mathbf{t}, \sigma_B, \sigma_L, C) = \sum_{i} w_i^L \cdot (L(e_i) )^2 + \sum_{i} w_i^B\cdot(B(e_i))^2 \\
     + \sum_{i} w^D_i \cdot (L(e_i) -d_i)^2 + \sum_{i} w_P \cdot (t_i-0.5)^2 &lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\mathbf{t} = &lt;t_0, t_1, ... , t_{n-1} &gt;  %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;e_i = t_i\cdot P_{i0}+(1-t_i) \cdot P_{i1}&lt;/script&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; w_i^L = e^{-(\frac{\|d_i\|}{\sigma_L})^2}, w_i^B = e^{-(\frac{\|b_i\|}{\sigma_B})^2}, w_i^D = C\cdot(2.0-w_i^L-w_i^B). w_P = 0.001&lt;/script&gt;.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;The following results show different strategies of computing laplacian.
In general, the laplacian vector &lt;script type=&quot;math/tex&quot;&gt;L(e_i) &lt;/script&gt; is computed as &lt;script type=&quot;math/tex&quot;&gt; L(e_i) = e_i - a \cdot e_{i-1} + (1-a) \cdot e_{i+1}&lt;/script&gt;.
The constant results in the following pages use &lt;script type=&quot;math/tex&quot;&gt; a = 0.5 &lt;/script&gt; across all iterations.
The update results in the following pages update &lt;script type=&quot;math/tex&quot;&gt; a &lt;/script&gt; for every iteration using the update mesh.
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/circle109-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/circle109-a-comp.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/rect1-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/rect1-a-comp.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/rect3-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/rect3-a-comp.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/rect4-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/rect4-a-comp.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/flag-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/flag-a-comp.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/pacman-a-comp.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/pacman-a-comp.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For different shapes, we should apply different  &lt;script type=&quot;math/tex&quot;&gt;\sigma_L, \sigma_B&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;C&lt;/script&gt;.
I listed some experiment in the following pages.
For each case, I tested different sets of parameters after 1, 2, 10 iterations.
As we can find out, for shapes with sharp corner like rect, the sigma should be small enough that don’t smooth out the structure.
Noted that the &lt;script type=&quot;math/tex&quot;&gt;w_D^i = c \cdot (2.0-w_L^i-w_B^i) &lt;/script&gt;, which is compliment to the other two weights.
For the smooth shape, we then have to enlarge the sigma for better smoothing results.
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/circle109-grid-tuning.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/circle109-grid-tuning.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/rect1-grid-tuning.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/rect1-grid-tuning.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/pacman-grid-tuning.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/pacman-grid-tuning.html&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Linear System</title>
   <link href="http://jdily.github.io/draft/2015/11/12/Linear-System/"/>
   <updated>2015-11-12T00:00:00-08:00</updated>
   <id>http://jdily.github.io/draft/2015/11/12/Linear-System</id>
   <content type="html">&lt;h2 id=&quot;the-linear-system&quot;&gt;The linear system&lt;/h2&gt;
&lt;p&gt;If we only look at the third term (laplacian positioning term) : &lt;script type=&quot;math/tex&quot;&gt; ( L(e_i) -d_i )^2  &lt;/script&gt;, I think we got &lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;e_i - 0.5 e_{p} - 0.5 e_{n} - d_i = 0 &lt;/script&gt;

&lt;p&gt;where $p = i-1$ and $n = i+1$.&lt;/p&gt;

&lt;p&gt;So far, I formulate the optimization in terms of $t_i$, so the previous equation can be transformed into:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; 
P_{i0}\cdot (1-t_i)+P_{i1} \cdot t_i - 0.5 \cdot (P_{p0}\cdot (1-t_p)+P_{p1}\cdot t_p) - 0.5 \cdot (P_{n0}\cdot (1-t_n)+P_{n1}\cdot t_n) 
= d_i
&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
t_i \cdot (P_{i1} - P_{i0}) - t_p \cdot 0.5 \cdot (P_{p1}-P_{p0}) -  t_n \cdot 0.5 \cdot (P_{n1}-P_{n0}) =  d_i - P_{i0} + 0.5\cdot P_{p0} + 0.5\cdot P_{n0}
&lt;/script&gt;

&lt;p&gt;and all the $P_{xx}$ and $d_i$ are 2D vectors in current 2D setting.
It means we have two equations for each $i$, i.e. &lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;
t_i \cdot (P_{i1}.x - P_{i0}.x) - t_p \cdot 0.5 \cdot (P_{p1}.x-P_{p0}.x) -  t_n \cdot 0.5 \cdot (P_{n1}.x-P_{n0}.x) =  \\
d_i .x- P_{i0}.x + 0.5\cdot P_{p0}.x + 0.5\cdot P_{n0}.x
&lt;/script&gt;
and &lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
t_i \cdot (P_{i1}.y - P_{i0}.y) - t_p \cdot 0.5 \cdot (P_{p1}.y-P_{p0}.y) -  t_n \cdot 0.5 \cdot (P_{n1}.y-P_{n0}.y) =  \\
d_i .y- P_{i0}.y + 0.5\cdot P_{p0}.y + 0.5\cdot P_{n0}.y
&lt;/script&gt;

&lt;p&gt;and i think it leads to an over-determined system.
So if we have $n$ unknowns (i.e. &lt;script type=&quot;math/tex&quot;&gt;t_0... t_{n-1}&lt;/script&gt;), then we will get a &lt;script type=&quot;math/tex&quot;&gt;2n\times n&lt;/script&gt; matrix $A$ before add any positional constraints (boundary condition.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Energy discussion</title>
   <link href="http://jdily.github.io/draft/2015/11/10/Energy-Discussion/"/>
   <updated>2015-11-10T00:00:00-08:00</updated>
   <id>http://jdily.github.io/draft/2015/11/10/Energy-Discussion</id>
   <content type="html">&lt;h2 id=&quot;optimization-function-with-two-terms-and-spatial-varying-weights&quot;&gt;Optimization function with two terms and spatial-varying weights&lt;/h2&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; E_{total} = \sum_{e_i} w_i^L (L(e_i))^2 + \sum_{e_i} w_i^C (C(e_i))^2&lt;/script&gt;,&lt;/p&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;L(e_i)&lt;/script&gt; is the local laplacian, and &lt;script type=&quot;math/tex&quot;&gt;C(e_i)&lt;/script&gt; is bilaplacian.&lt;/p&gt;

&lt;h3 id=&quot;goal-describe&quot;&gt;Goal describe:&lt;/h3&gt;

&lt;h4 id=&quot;training&quot;&gt;Training&lt;/h4&gt;
&lt;p&gt;With ground truth shape in hand, we know all the &lt;script type=&quot;math/tex&quot;&gt;e_i&lt;/script&gt; so we know all the &lt;script type=&quot;math/tex&quot;&gt;L(e_i)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;C(e_i)&lt;/script&gt;, so we can formulate a linear programming with unknown $w_i^L$ and $w_i^C$.
With constraints like &lt;script type=&quot;math/tex&quot;&gt;\sum_{i}w_i^L= n&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;\sum_{i}w_i^C = n&lt;/script&gt; (n is the number of total sample in the shape, it can be also normalized as 1.).
And our dataset will consist of pairs of local shape pattern (low resolution feature) with &lt;script type=&quot;math/tex&quot;&gt;w_i^L&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_i^C&lt;/script&gt;.&lt;/p&gt;

&lt;h4 id=&quot;reconstructing&quot;&gt;Reconstructing&lt;/h4&gt;
&lt;p&gt;For reconstruct, using each local pattern, we infer the corresponding &lt;script type=&quot;math/tex&quot;&gt;w_i^L&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_i^C&lt;/script&gt; through the learning method.
And we use these &lt;script type=&quot;math/tex&quot;&gt;w_i^L&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_i^C&lt;/script&gt; to complete the formulation and solve for &lt;script type=&quot;math/tex&quot;&gt;e_i&lt;/script&gt;.&lt;/p&gt;

&lt;h4 id=&quot;problem1--linear-programming-regularize&quot;&gt;Problem1 : linear programming regularize?&lt;/h4&gt;
&lt;p&gt;When solving this linear programming, it will leads to a very big value assign to the smallest laplacian value sample and to the smallest bilaplacian value sample.
So for example, with a circle shape with 180 samples, the output of w_i^L will be a vector with all 0 but only 1 180 which assigned to the smallest laplacian e_i.
And on the other hand, the output of w_i^C will be a vector with all 0 but only 1 180 which assigned to the smallest bilaplacian e_i.&lt;/p&gt;

&lt;h4 id=&quot;problem-2--relative-weight-value-meaning&quot;&gt;Problem 2 : relative weight value meaning..&lt;/h4&gt;
&lt;p&gt;When solving the linear programming, we set some constraints like &lt;script type=&quot;math/tex&quot;&gt;\sum_{i}w_i^L= n&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;\sum_{i}w_i^C = n&lt;/script&gt; (n is the number of total sample in the shape, it can be also normalized as 1.).
I think the spatial-varying weighting here represents, for each term, it’s strongeness is different from sample to sample, so it’s a relative value.
However, this relative value, may not be able to use across different shapes.&lt;/p&gt;

&lt;p&gt;For example, I have a circle with 180 samples, and another shape, with 100 samples.
Even though there is a same local pattern happens in both shape, and their weight value are both 10, but the absolute value 10 means different in both shapes.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Data investigation</title>
   <link href="http://jdily.github.io/draft/2015/11/07/Data-investigation/"/>
   <updated>2015-11-07T00:00:00-08:00</updated>
   <id>http://jdily.github.io/draft/2015/11/07/Data-investigation</id>
   <content type="html">&lt;p&gt;I did a comparison for the laplacian inference using trained laplacian regression function, using linear regression, nearest neighbour and network.
You can find some comparison results in the following webpage (including numerical and shape comparison, ).
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-sound.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-sound.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-guitar.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-guitar.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-mickey.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-mickey.html&lt;/a&gt;
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-flag.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/exp4-val-linear-flag.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some confusion about the shape shown in the webpage, they are results of nearest neighbours, if needed I can also show all the results using different methods.&lt;/p&gt;

&lt;h4 id=&quot;thoughts&quot;&gt;Thoughts&lt;/h4&gt;

&lt;p&gt;But the conclusion for the comparison is : &lt;strong&gt;there are no huge differences between all these methods&lt;/strong&gt;.
The good thing is I think our problem formulation, in the beginning, already help us to reach a good point (the zero predict in the previous results show that even without inferred laplacian value, we can already get a fairly good overall shape.)
What we want to achieve is to infer good local structures (geometry feature) that captured in the data.&lt;/p&gt;

&lt;p&gt;So I decided to do some investigation of our input data, especially the training data, with some visualization.&lt;/p&gt;

&lt;h3 id=&quot;data-distribution---output-laplacian-value&quot;&gt;Data distribution - output laplacian value&lt;/h3&gt;

&lt;p&gt;First thing that I tried to visualize is the distribution of the ground truth laplacian values in the training set.
I mentioned this before, but never try to visualize them, so here we go.
&lt;img src=&quot;http://jdily.github.io/images/value_distribution.png&quot; alt=&quot;ground truth laplacian distribution&quot; /&gt;
Figure on the left hand side (green bars) is the distribution of &lt;strong&gt;x-component&lt;/strong&gt;, and right hand side is the distribution of &lt;strong&gt;y-component&lt;/strong&gt;.
According to the figures, I found out that most of our output values are very close to 0.
And there are very few laplacians are with bigger scale, but I think those bigger laplacians are the thing that we care about (because they represent the local feature.).&lt;/p&gt;

&lt;h3 id=&quot;prediction-value-distribution---test-case-sound&quot;&gt;Prediction value distribution - Test case (sound)&lt;/h3&gt;
&lt;p&gt;Next thing I did is I plot the distribution of both x- and y-components of output laplacian values in 2D (see the following fig).
(x-axis is for x-components, and y-axis is for y-components).
&lt;img src=&quot;http://jdily.github.io/images/output_val_plot.png&quot; alt=&quot;output value distribution&quot; /&gt;
The blue dots are the ground truth points, the green dots are the predicted results using linear regression, and the red dots are predicted results using network.
As you can see, most of the predictions from both methods gather up close to the center (which is (0, 0) ), and fail to capture the bigger laplacians on the outside.&lt;/p&gt;

&lt;h4 id=&quot;supplemental-figure--training-value-distribution&quot;&gt;Supplemental figure : Training value distribution&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/output_val_plot_train.png&quot; alt=&quot;output value distribution - training&quot; /&gt;
This new figure illustrate the training set fitting.&lt;/p&gt;

&lt;h3 id=&quot;feature-attributes-and-predict-value&quot;&gt;Feature attributes and Predict value&lt;/h3&gt;
&lt;p&gt;I haven’t have a very concrete idea of how to show this, but I also plotted something out, so I think it still ok to show it.
In the following two figs, I plotted some dimensions of the input features with a output dimension (e.g. dim 0 in the feature pair with dim 0 in result laplacian.)&lt;/p&gt;

&lt;p&gt;This figure shows the relationship between different dimension in features and x-component in result laplacian.
&lt;img src=&quot;http://jdily.github.io/images/data_predict_plot_x.png&quot; alt=&quot;pair-x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This figure shows the relationship between different dimension in features and y-component in result laplacian.
&lt;img src=&quot;http://jdily.github.io/images/data_predict_plot_y.png&quot; alt=&quot;pair-y&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So far, these figures just reveal the same thing with the previous figure, that all the predict values gather at centre area.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Curvature, mirror feature discussion</title>
   <link href="http://jdily.github.io/draft/2015/10/30/mirror_curvature_feature/"/>
   <updated>2015-10-30T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/30/mirror_curvature_feature</id>
   <content type="html">&lt;p&gt;I try to draw some diagrams to describe my idea and combine the mirror idea that Nathan mentioned in the morning.
The window size used in the figure below is 9, i.e. 4 on each directions.
There are two parts in this draft:&lt;/p&gt;

&lt;h3 id=&quot;feature-with-laplacian-or-curvature-value&quot;&gt;Feature with laplacian or curvature value&lt;/h3&gt;

&lt;h4 id=&quot;training&quot;&gt;training&lt;/h4&gt;
&lt;p&gt;we feed several $(F_i, R_i)$ pairs to network, and try to learn the regression function for the laplacian vector.&lt;/p&gt;

&lt;h4 id=&quot;testing&quot;&gt;testing&lt;/h4&gt;
&lt;p&gt;use $F_i$ as query and infer the learned regression function for target $R_i$ (result laplacian vector from ground truth).&lt;/p&gt;

&lt;p&gt;Here I focus on discussion of the &lt;strong&gt;feature vector&lt;/strong&gt; ($F_i$) part, and the result vector ($R_i$) is still a laplacian vector from ground truth shape. 
I try to come up some new thoughts for feature vectors, and I summarize some thoughts here (please see the figure below).
We begin from the low-resolution shape image, and we have local raw representation (the red dots in the figure connected by the green arrows) in the figure: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;laplacian vector feature : use local raw representation to compute local laplacian vector &lt;script type=&quot;math/tex&quot;&gt; \mathcal{L}(e_i)&lt;/script&gt;, resulted in a 18-dim vector.
Please noted that the blue dots in the figure means zero vectors.&lt;/li&gt;
  &lt;li&gt;curvature value feature : local curvature measured by &lt;script type=&quot;math/tex&quot;&gt; \| \mathcal{L}(e_i) \|_2&lt;/script&gt;, results in a 9-dim vector.
The 3 in the figure is just a example non-zero curvature number.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The black arrows in the figure represent $R_i$ (ground truth laplacian vector).&lt;/p&gt;

&lt;h3 id=&quot;mirror-feature&quot;&gt;Mirror feature&lt;/h3&gt;

&lt;p&gt;For the example in the figure, I draw three different versions of them:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$M_y$: mirror of y-axis &lt;/li&gt;
  &lt;li&gt;$M_x$: mirror of x-axis&lt;/li&gt;
  &lt;li&gt;$M_x M_y$: mirror of y-axis and then x-axis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/curvature_feature_mirror.png&quot; alt=&quot;illustration&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;discussion&quot;&gt;Discussion&lt;/h3&gt;

&lt;h4 id=&quot;result-ambuiguity&quot;&gt;result ambuiguity&lt;/h4&gt;

&lt;p&gt;Originally I am thinking if we can extract some real-value only and use them as feature, which is curvature value feature.
However, if I insert the original feature (0 0 3 0 3 0 0 0 0) into database, and  then I want to also insert Mirror x version into database,
it lead to an ambiguity.
Both of them share the same feature vector (0 0 3 0 3 0 0 0 0), however, the desired result laplacian vectors are not in the same direction.
So I think I will use the &lt;strong&gt;laplacian vector feature&lt;/strong&gt; instead.&lt;/p&gt;

&lt;h4 id=&quot;avoid-direction-inference&quot;&gt;Avoid direction inference&lt;/h4&gt;

&lt;p&gt;Right now, we try to infer both the direction and the magnitude in both x and y direction of the laplacian vector.
(So we may get (-0.2, 0.5), (0.2, -0.5), (-0.2, -0.5), (0.2, 0.5) so on…)
I am  thinking about if we can reduce the burden of the inference, say, only ask it for magnitude of both x and y direction.
And we decide the direction based on some local geometry, e.g. try to compute the normal at each sample location.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Feature illustration</title>
   <link href="http://jdily.github.io/draft/2015/10/30/Feature-Idea-Draft/"/>
   <updated>2015-10-30T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/30/Feature-Idea-Draft</id>
   <content type="html">&lt;p&gt;For each shape, in both training and testing phase, we start from the low-resolution image, &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we start from sampling points at the center of each open edge (the red dot in the figure below).&lt;/li&gt;
  &lt;li&gt;After this step, we already got the initial connectivity (or say topology) of the desired shape (the green line in the figure).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my understanding, our problem can be viewed as given this topology, we want to refine the shape to match some properties, e.g. desired curvatures in our current case.
&lt;img src=&quot;http://jdily.github.io/images/topology.png&quot; alt=&quot;raw representation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the fixed topology, what remain to decide is the positions of the vertices.&lt;/p&gt;

&lt;p&gt;For each sample location, we open a window (like the figure below, the size in this example is 11, 5 for each direction), and the &lt;strong&gt;raw representation&lt;/strong&gt; of this place is the relative coordinates we used right now.
So far, we feed these locations w/o any further information, so the current feature &lt;script type=&quot;math/tex&quot;&gt;f_{i} \in \mathcal{R}^{20}&lt;/script&gt;is &lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; 
f_{i} = (\mathit{P}_{-5}(x, y), \mathit{P}_{-4}(x, y), \mathit{P}_{-3}(x, y), \mathit{P}_{-2}(x, y), \mathit{P}_{-1}(x, y), \\
 \mathit{P}_{1}(x, y),  \mathit{P}_{2}(x, y),  \mathit{P}_{3}(x, y),  \mathit{P}_{4}(x, y),  \mathit{P}_{5}(x, y))
&lt;/script&gt;

&lt;p&gt;and expect the network to extract some hidden information base on this.
&lt;img src=&quot;http://jdily.github.io/images/local_window.png&quot; alt=&quot;raw representation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And what I am trying to think is that if we can extract some information from this initial shape.
Say, treat it also as a shape, and extract the curvature value using &lt;script type=&quot;math/tex&quot;&gt; \| \mathcal{L}(e_i) \|_2&lt;/script&gt;, where $\mathcal{L}$ is the laplacian operator.
So in this case, our feature vector &lt;script type=&quot;math/tex&quot;&gt;\tilde{f}_{i} \in \mathcal{R}^{11}&lt;/script&gt; will become like:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; 
\tilde{f}_{i} = (\mathit{K}_{-5}, \mathit{K}_{-4}, \mathit{K}_{-3}, \mathit{K}_{-2}, \mathit{K}_{-1}, \mathit{K}_{0},  
 \mathit{K}_{1},  \mathit{K}_{2},  \mathit{K}_{3},  \mathit{K}_{4},  \mathit{K}_{5})
&lt;/script&gt;

&lt;p&gt;And this is correspond to Zhaowen’s manually extract some information.&lt;/p&gt;

&lt;h3 id=&quot;discussion-about-add-four-training-set-for-each-location&quot;&gt;Discussion about add four training set for each location..&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://CoSketch.com/Saved/pvaXBa2Y&quot;&gt;&lt;img src=&quot;http://CoSketch.com/SavedImages/pvaXBa2Y.thumb.png&quot; alt=&quot;Thumbnail&quot; title=&quot;Click to enlarge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rotation issue</title>
   <link href="http://jdily.github.io/draft/2015/10/21/Rotation-issue/"/>
   <updated>2015-10-21T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/21/Rotation-issue</id>
   <content type="html">&lt;p&gt;I think I found some interesting examples that bothers me in the beginning, about the rotation issue we discussed today.
We still take circle as example, and look the following example:
All the four points in this figure have the same feature vectors.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/sync_example.png&quot; alt=&quot;sync example&quot; /&gt;
and their laplacian vectors are listed as follow:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;index&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;laplacian&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;(-0.00243961, -0.00294993)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;61&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( -0.00294993, 0.00243915 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;106&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00243915, 0.00294946 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;151&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00294946, -0.00243961 )&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;After aligning all of them to face downward, the rotated laplacian vectors are &lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;index&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;laplacian&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00243961, 0.00294993 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;61&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00243961, 0.00294946 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;106&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00243915, 0.00294993 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;151&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 0.00243915, 0.00294946 )&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;where all of them aligns pretty well.&lt;/p&gt;

&lt;p&gt;However, there are some other exceptions :
All the four points in the next figures have the same feature vector
&lt;img src=&quot;http://jdily.github.io/images/unsync_example.png&quot; alt=&quot;unsync example&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;index&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;laplacian&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 4.92395e-07, 1.19333e-07 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 1.19333e-07, 9.97721e-07 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;93&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 9.97721e-07, 1.37078e-06 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;138&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 1.37078e-06, 4.92395e-07 )&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;After aligning all of them to face downward, the rotated laplacian vectors are &lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;index&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;laplacian&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( -4.92395e-07, -1.19333e-07 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 9.97721e-07, -1.19333e-07 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;93&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( 9.97721e-07, 1.37078e-06 )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;138&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;( -4.92395e-07, 1.37078e-06 )&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Most of these kinds of laplacian vectors have values very close to 0, and most of all the bigger value laplacian vectors are well aligned.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learning the bias term from data</title>
   <link href="http://jdily.github.io/draft/2015/10/16/Learning-Bias-Draft/"/>
   <updated>2015-10-16T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/16/Learning-Bias-Draft</id>
   <content type="html">&lt;h2 id=&quot;note&quot;&gt;Note&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>Some thoughts and experiment about simplified function.</title>
   <link href="http://jdily.github.io/progress/2015/10/15/Simplified-Function/"/>
   <updated>2015-10-15T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/15/Simplified-Function</id>
   <content type="html">&lt;h2 id=&quot;simplified-function&quot;&gt;Simplified function&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = \sum_{e_i} \| e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1}) - b_i \| ^2_2&lt;/script&gt;

&lt;h2 id=&quot;solve-approach&quot;&gt;Solve approach&lt;/h2&gt;
&lt;p&gt;To solve $E_{curve}$, we need &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt; w_{i+1}&lt;/script&gt; and $b_i$ for each $e_i$.&lt;/p&gt;

&lt;p&gt;For $b_i$, we are basically try to learn it from data, so that it is a &lt;strong&gt;data-driven&lt;/strong&gt; bias, that can encode style of the input dataset while we are reconstructing the surface.&lt;/p&gt;

&lt;p&gt;For &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_{i+1}&lt;/script&gt;, they are used for compute the weighted laplacian.
And I think we have two different approaches to get these values.&lt;/p&gt;

&lt;h3 id=&quot;direct-inferring&quot;&gt;direct inferring&lt;/h3&gt;
&lt;p&gt;As Nathan described in the meeting, because we can also get this values from ground truth, we can also try to learn it from data.
I put some initial results at &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/gt-laplacian-and-weights-results.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/gt-laplacian-and-weights-results.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results looks perfect, but I am still trying to figure out why I don’t even provide a positional constraint.&lt;/p&gt;

&lt;h3 id=&quot;alternative-optimization&quot;&gt;alternative optimization&lt;/h3&gt;
&lt;p&gt;I can also use alternative optimization method, that only take inferred bias as known, and alternatively optimize the weights and $e_i$.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-opt-circle-comparison.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-opt-circle-comparison.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Oct 14, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/10/15/Oct14-meeting-note/"/>
   <updated>2015-10-15T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/10/15/Oct14-meeting-note</id>
   <content type="html">&lt;h1 id=&quot;notes&quot;&gt;Notes&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/note-20131014.png&quot; alt=&quot;meeting sketch&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;there is no need to keep both laplacian and bi-laplacian in the same time if we add &lt;strong&gt;data-driven&lt;/strong&gt; bias term.
    &lt;ul&gt;
      &lt;li&gt;In the sketch figure, basically if we keep both terms and use weights to control the local behavior, it’s basically similar to use only one term with spatial-varying bias term. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;we can get two things from ground truth (and those are things that we can possibly infer from data), please see triangle in the figure:
    &lt;ul&gt;
      &lt;li&gt;laplacian vector&lt;/li&gt;
      &lt;li&gt;weights for weighted laplacian ($w_p$ and $w_n$)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And we have two strategies to tackle this problem:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;learn all those values (3 values in 2D, including 2-dim laplacian vector, and one scalar weight ($w_p+w_n=1.0$) ).&lt;/li&gt;
  &lt;li&gt;only learn laplacian vector, and use alternative optimization to optimize $w_p$ and $w_n$.	&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Results from new optimization function</title>
   <link href="http://jdily.github.io/progress/2015/10/13/New-Energy-Result/"/>
   <updated>2015-10-13T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/13/New-Energy-Result</id>
   <content type="html">&lt;p&gt;I have the first version of a new alternative solver to solve our new optimization function.
Let me briefly re-explain what I am doing in this solver.
Here is the function:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;p&gt;Here we first define a laplacian function for each $e_i$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; \mathcal{L}(e_i) = e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1})  &lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{min} = \sum_{e_i} \mathbf{W}_1(e_i)\| \mathcal{L}(e_i) - b_i^1\| _2^2 &lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{const} =  \sum_{e_i } \mathbf{W_2}(e_i) \| \mathcal{L}(\mathcal{L}(e_i)) - b^2_i  \|_2^2 &lt;/script&gt;

&lt;h3 id=&quot;optimization-process&quot;&gt;Optimization process&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;initialize the variables ($t_i$ for each $e_i$) as 0.5.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;: check whether initial values of $t_i$ affects the results. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Use current $e_i$ to compute the weights for laplacian&lt;/li&gt;
  &lt;li&gt;Solve $e_i$ by optimizing $E_{curve}$ with know weights from step 2.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Repeat 2, 3 until converge&lt;/strong&gt;..&lt;/p&gt;

&lt;h3 id=&quot;optimization-result&quot;&gt;Optimization result.&lt;/h3&gt;
&lt;p&gt;For all the results shown below, I first set both $\mathbf{W}_1$ and $\mathbf{W}_2$ as 0.5, for every $e_i$.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please see the following results:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-bubble.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-bubble.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-circle109.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-heart298.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-heart298.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-phone.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-phone.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect1.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect1.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect2.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect2.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-triangle36.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-triangle36.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;br /&gt;
1. I think the visualization is not so easy to view, do you have any good suggestion to show the boundary lines clearer? (in contrast to the background shape..)&lt;br /&gt;
2. Right now we have two kinds of weights&lt;br /&gt;
	1. spatial-varying weights Alla proposed : (&lt;script type=&quot;math/tex&quot;&gt;\mathbf{W}_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathbf{W}_2&lt;/script&gt;)&lt;br /&gt;
	2. the weights for distance weighted laplacian (&lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_{i+1}&lt;/script&gt; and more in &lt;script type=&quot;math/tex&quot;&gt;\mathcal{L}(e_i)&lt;/script&gt;)      &lt;br /&gt;
I think we can come up some different names or notations for express them. Or it is a little bit confusing during discussion..
3. I’ll start to work on manually assign different &lt;strong&gt;spatial-varying&lt;/strong&gt; weights. &lt;br /&gt;
4. I am also interested in testing the different initialization values for each $t_i$.  &lt;br /&gt;
5. Observed from all the above examples, I found out that our thoughts about bias term might be right. &lt;br /&gt;
The reason is that for most of the new optimized results I got, their energies are lower than their ground truth’s energies.
I think this means to ``reproduce’’ the ground truth, the targets of laplacian and bi-laplacian are not perfectly zero.
(I do found out this during some tests, so if needed, I can come up some tables to show these statistics.)&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>New energy comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/09/New-Energy-comparison/"/>
   <updated>2015-10-09T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/09/New-Energy-comparison</id>
   <content type="html">&lt;p&gt;According to the discussion on Oct 07, we have to modify the function in terms of the problem mentioned in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we want to add a bias term for each data point, i.e. $b_i$, to reveal the fact that not all laplacian values from ground truth are 0..&lt;/p&gt;

&lt;h2 id=&quot;optimization-with-weighted-laplacian-ie-normalize-the-distance&quot;&gt;Optimization with weighted laplacian (i.e. normalize the distance)&lt;/h2&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;
Here we first define a laplacian function for each $e_i$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; \mathcal{L}(e_i) = e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1})  &lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}^{i}&lt;/script&gt; denotes as weight for $e_{i-1}$ with respect to $e_i$.&lt;/p&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} \mathbf{W}_1(e_i)\| \mathcal{L}(e_i) - b_i^1\| _2^2 &lt;/script&gt;

&lt;p&gt;where $b_i^1$ is a bias value for each $e_i$, and we can learn this $b_i^1$ from data.&lt;/p&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } \mathbf{W_2}(e_i) \| \mathcal{L}(\mathcal{L}(e_i)) - b^2_i  \|_2^2 &lt;/script&gt;

&lt;p&gt;And can be expand as complicated version as follow:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (w_{i-1}^{i}e_{i-1} +w_{i+1}^{i}e_{i+1})  - ( {w}&#39;_{i-1}[e_{i-1} - (w_{i-2}^{i-1}e_{i-2} + w_{i}^{i-1}e_{i})]+ {w}&#39;_{i+1}[e_{i+1} - (w_{i}^{i+1}e_{i} + w_{i+2}^{i}e_{i+2})]  )  \|_2^2 &lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;{w}&#39;_{i+1}&lt;/script&gt; and ${w}’_{i+1}$  are respect to $\mathcal{L}(e_i)$.&lt;/p&gt;

&lt;h3 id=&quot;comparison--both-gt-and-optimized-data-from-previous-energy-on-new-energy&quot;&gt;Comparison : both gt and optimized data (from previous energy) on new energy&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bubble&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.33&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.35&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.68 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.69&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.40&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.09&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;circle109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.047&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.052&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.099&lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.69&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.61&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;heart298&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.39&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.45&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.84 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.74&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.21&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;phone-hang-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.27&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.26&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.53 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.44&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.21&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;rect1&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;gt (wrong gt) &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;  &lt;del&gt;0.67&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.84 &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt; 1.51&lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;optimized&lt;/del&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;del&gt;0.25 &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.06&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.31 &lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;triangle36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.76&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1.22 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.83&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.94&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.77&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Revised optimization function</title>
   <link href="http://jdily.github.io/draft/2015/10/09/Function-reformulate/"/>
   <updated>2015-10-09T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/09/Function-reformulate</id>
   <content type="html">&lt;p&gt;According to the discussion on Oct 07, we have to modify the function in terms of the problem mentioned in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we want to add a bias term for each data point, i.e. $b_i$, to reveal the fact that not all laplacian values from ground truth are 0..&lt;/p&gt;

&lt;h2 id=&quot;optimization-with-weighted-laplacian-ie-normalize-the-distance&quot;&gt;Optimization with weighted laplacian (i.e. normalize the distance)&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} \mathbf{W}_1(e_i)\| e_i - (w_{i-1}e_{i-1}+w_{i+1}e_{i+1}) - b_i\| _2^2 &lt;/script&gt;

&lt;p&gt;where $b_i$ is a bias value for each $e_i$, and we can learn this $b_i$ from data.&lt;/p&gt;

&lt;h3 id=&quot;implementation&quot;&gt;Implementation&lt;/h3&gt;

&lt;h4 id=&quot;variable-&quot;&gt;variable :&lt;/h4&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2^2 &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Oct 07, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/10/07/meeting/"/>
   <updated>2015-10-07T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/10/07/meeting</id>
   <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;add an normalization process in the optimization to deal with the problem described in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;verify the new distance weighting using ground truth examples.&lt;/li&gt;
      &lt;li&gt;implement the alternative optimization process to generate desired results.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;add a bias into both energy terms, because for most of the curves, the laplacian and bi-laplacian may not be exactly 0. (i.e. we may not really want zero in our results)
    &lt;ul&gt;
      &lt;li&gt;also, verify this from some ground truth examples, i.e. for each vertex, compute both laplacian and bi-laplacian.&lt;/li&gt;
      &lt;li&gt;and in the end we can &lt;strong&gt;learn&lt;/strong&gt; this bias as learning the prior (also, we can think about whether to keep the weights or not, because it is also kind of prior…)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;if anyone want to find the results or discussion for the original functions, please see
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/07/Weekly-summary/&quot;&gt;http://jdily.github.io/progress/2015/10/07/Weekly-summary/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Weekly summary</title>
   <link href="http://jdily.github.io/progress/2015/10/07/Weekly-summary/"/>
   <updated>2015-10-07T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/07/Weekly-summary</id>
   <content type="html">&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This week I worked on minimizing the energy, please see the webpage at:&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/02/Optimization-draft/&quot;&gt;http://jdily.github.io/progress/2015/10/02/Optimization-draft/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And compare the results using different terms, i.e. use each term independently.
&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And I also compare the ground truth with the optimized results in terms of energy:&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/&quot;&gt;http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Still work on a potential problem of current energy, please see&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>GT energy comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/"/>
   <updated>2015-10-06T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT</id>
   <content type="html">&lt;h3 id=&quot;compare-energy-with-ground-truth-l2&quot;&gt;Compare energy with ground truth (L2)&lt;/h3&gt;

&lt;p&gt;I set both weighting 0.5, however, because I think the scale of two terms may not be equal.
So maybe they are not contributing equally.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bubble&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.16217&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;18.774&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;25.93617&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.13518&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.47112&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.6063&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;circle109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.29661&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22.6688&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;29.96541&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.38505&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.17509&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.56014&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;heart298&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11.3842&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;36.7804&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48.1646&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.89751&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.03962&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.93713&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;phone-hang-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.8908&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12.161&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17.0518&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.31873&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.2576&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.57633&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rect1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.698162&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.745405&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.443567&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.309573&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.066709&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.376282&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;triangle36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.25513&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;21.9114&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30.16653&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 2.50129&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.12958&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.63087&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;discussion&quot;&gt;Discussion&lt;/h3&gt;
&lt;p&gt;I think one interesting thing to think about is that, our ground truth, are not necessary be the optimal for this energy, right?
So for most cases (well, for all of these 6 examples), the optimized energies are lower than the energies from gt.&lt;/p&gt;

&lt;p&gt;One intriguing result to me is about circle109…
Both terms from gt are higher than the optimized results (which is a wavy result, please see &lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&lt;/a&gt;)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Energy discussion</title>
   <link href="http://jdily.github.io/draft/2015/10/06/Energy-Discussion/"/>
   <updated>2015-10-06T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/06/Energy-Discussion</id>
   <content type="html">&lt;h3 id=&quot;normalization-problem&quot;&gt;normalization problem&lt;/h3&gt;
&lt;p&gt;I think we may have problem with our current energy due to non-equal spacing.
For the local smoothing operation, i.e. only term1&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} W_1(e_i)\| e_i - (e_{i-1}+e_{i+1})/2\| _2^2 &lt;/script&gt;

&lt;p&gt;we are trying to minimize the distance of blue arrow in the figure below (i.e. minimizing curvature) by encouraging flatten.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/mini_curvature.png&quot; alt=&quot;minimize curvature&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, straight line should minimize this energy. However, I think that only happens when the spacing is equal. &lt;/p&gt;

&lt;p&gt;If all our results (e_i’s) are lying on the same line, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/spacing.png&quot; alt=&quot;spacing comparison&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see in the figure, if the spacing is not equal, then even straight line can not minimize this energy, even though the curvature is already minimized..
So I think the energy may need to be modified as taking the edge length proportion into consideration..&lt;/p&gt;

&lt;h3 id=&quot;angle-version&quot;&gt;angle version!?&lt;/h3&gt;
</content>
 </entry>
 
 <entry>
   <title>Term comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/05/Term-Comparison/"/>
   <updated>2015-10-05T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/05/Term-Comparison</id>
   <content type="html">&lt;p&gt;Put some comparison for both term at &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Optimization draft</title>
   <link href="http://jdily.github.io/progress/2015/10/02/Optimization-draft/"/>
   <updated>2015-10-02T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/02/Optimization-draft</id>
   <content type="html">&lt;h2 id=&quot;optimization-with-spatial-varying-weights&quot;&gt;Optimization with spatial-varying weights&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} W_1(e_i)\| e_i - (e_{i-1}+e_{i+1})/2\| _2^2 &lt;/script&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2^2 &lt;/script&gt;

&lt;h3 id=&quot;note&quot;&gt;Note&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Now I use square distance of 2-norm.&lt;/li&gt;
  &lt;li&gt;The only constraints I have now for each $e_i$ is $ 0 \leq e_i \leq 1$.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;experiment&quot;&gt;Experiment&lt;/h3&gt;

&lt;p&gt;To try out the optimization, I optimize different shapes and different weights combinations.&lt;/p&gt;

&lt;h4 id=&quot;uniform-weights&quot;&gt;uniform weights&lt;/h4&gt;

&lt;p&gt;In these examples, I use both weighting as 0.5, i.e. $W_1(e_i) = 0.5, W_2(e_i) = 0.5$ for each $i$. &lt;/p&gt;

&lt;p&gt;Please see the following results:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-rect1.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-rect1.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-heart298.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-heart298.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-triangle36.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-triangle36.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-phone.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-phone.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;spatial-varying-weights&quot;&gt;spatial-varying weights&lt;/h4&gt;

&lt;p&gt;The thing is that I tried to add anisotropic weights into the optimization, but I didn’t get reasonable results when I manually set the weights.
Most of the time, the result are just very close to the isotropic weights results.
So I did a test that randomly generate the weights for every $e_i$, and the results still looks very close, and the optimized energy from the solver are close.&lt;/p&gt;

&lt;p&gt;I am trying to find out what is the problem right now… &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alla's note.</title>
   <link href="http://jdily.github.io/draft/2015/09/27/Alla-note/"/>
   <updated>2015-09-27T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/09/27/Alla-note</id>
   <content type="html">&lt;h2 id=&quot;variables&quot;&gt;Variables&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;br /&gt;
Think about the mid-edge and edge-end point (for deal with both corners and sides.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
e_i = P_{i1} \times (1-t) + P_{i2}\times t, 0&lt;=t &lt;=1 %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;br /&gt;
write more detail about each feature&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;context-free-feature&quot;&gt;Context-free feature&lt;/h3&gt;
&lt;p&gt;Encode neighbourhoods in terms of distance to subsequent left/right corners and the relative orientation of these corners.  &lt;/p&gt;

&lt;h3 id=&quot;context-feature&quot;&gt;Context feature&lt;/h3&gt;
&lt;p&gt;Contain current values of $e_i$ and X ``rings’’ of $e$ values, i.e.  (&lt;script type=&quot;math/tex&quot;&gt; ... e_{i-1}, e_i, e_{i+1}, ... &lt;/script&gt;)&lt;/p&gt;

&lt;h2 id=&quot;optimization&quot;&gt;Optimization&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; E_{curve} =  W_{1st(e_i)}\| e_i - (e_{i-1}+e_{i+1})/2\| _0  \\
     + W_{2nd(e_i)} \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_0&lt;/script&gt; &lt;/p&gt;

&lt;p&gt;There are linearized terms for &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;minimizing curvature&lt;/li&gt;
  &lt;li&gt;keeping curvature constant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$L_0$ aims to indicate that we want to allow some but not many places where this error is high..&lt;/p&gt;

&lt;p&gt;The algorithm would be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;compute context-free weights (generate these using CNN based on training..)  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Minimize our quadratic function (with linear inequalities):  &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve2} =  W_{1st(e_i)}\| e_i - (e_{i-1}+e_{i+1})/2\| _2  \\
     + W_{2nd(e_i)} \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2 &lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Update weights based on both feature vectors and $e_k$ values in an immediate neighborhood (rere rings of end-points) - i.e. compute context
based weights  (again train the network to give contextual weights)  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;repeat 2, 3 till weights/values no longer change.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Sep 23, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/09/23/meeting/"/>
   <updated>2015-09-23T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/09/23/meeting</id>
   <content type="html">&lt;h2 id=&quot;importants&quot;&gt;Importants&lt;/h2&gt;
&lt;p&gt;Next meeting : Sep 29 (Tue), 1:00 pm  &lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Visualization should be changed so that we can see the line clearer.&lt;/li&gt;
  &lt;li&gt;Smoothness issue
    &lt;ul&gt;
      &lt;li&gt;leverage local laplacian, i.e. describe a pixel crossing with two neighbors.&lt;/li&gt;
      &lt;li&gt;find out what we want, i.e. the optimization function.&lt;/li&gt;
      &lt;li&gt;We can 
        &lt;ul&gt;
          &lt;li&gt;use network results as initial value (i.e. using network to do the feature pattern-&amp;gt;crossing value mapping, because it’s hard to formulate as a numerical optimization.)&lt;/li&gt;
          &lt;li&gt;and do a post-optimization for smoothness (this one is easier to do optimization.)  &lt;/li&gt;
          &lt;li&gt;Also, we can try to incorporate this process into the network, as a new layer.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The current result can be consider as first-order prediction, we can try to make the loss (objective) function complicated and try to predict some other things.&lt;/li&gt;
      &lt;li&gt;For interactive usage, if post-optimization (globally) is needed, we can only do it once a while, but not after every update.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;action-items&quot;&gt;Action Items&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;generate double feature set -&amp;gt; for reflective symmetries&lt;/li&gt;
  &lt;li&gt;Run experiment -&amp;gt; use triangle and rect to reconstruct arrow.&lt;/li&gt;
  &lt;li&gt;drafting the introduction, including notation and target optimization function.&lt;/li&gt;
  &lt;li&gt;experiment with the two step optimization including laplacian&lt;/li&gt;
  &lt;li&gt;integrate caffe model into c++&lt;/li&gt;
  &lt;li&gt;Implement the new representation and compare..&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Arrow result</title>
   <link href="http://jdily.github.io/progress/2015/09/22/arrow-result/"/>
   <updated>2015-09-22T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/09/22/arrow-result</id>
   <content type="html">&lt;p&gt;Hi guys, I put a new result here 
Please see 
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/arrow-up.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/arrow-up.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now I am training on a bigger dataset.&lt;/p&gt;

&lt;p&gt;ichao&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learning rate tuning</title>
   <link href="http://jdily.github.io/progress/2015/09/17/learning-rate-tuning/"/>
   <updated>2015-09-17T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/09/17/learning-rate-tuning</id>
   <content type="html">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;learning rate&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0086047&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0098077&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0096455 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0061281 &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0057908&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0065994&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.0084242&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0083152&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0074397&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0423556 &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0422975&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;red&quot;&gt;0.0124222 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There is one strange loss for lr=0.5.. I ran it several times, and sometimes there is one smaller value… &lt;/p&gt;

</content>
 </entry>
 

</feed>
