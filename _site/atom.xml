<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Smooth Voxel Modeling</title>
 <link href="http://jdily.github.io/atom.xml" rel="self"/>
 <link href="http://jdily.github.io/"/>
 <updated>2015-10-15T22:34:15-07:00</updated>
 <id>http://jdily.github.io</id>
 <author>
   <name>I-Chao Shen</name>
   <email>jdilyshen@gmail.com</email>
 </author>

 
 <entry>
   <title>Some thoughts and experiment about simplified function.</title>
   <link href="http://jdily.github.io/progress/2015/10/15/Simplified-Function/"/>
   <updated>2015-10-15T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/15/Simplified-Function</id>
   <content type="html">&lt;h2 id=&quot;simplified-function&quot;&gt;Simplified function&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = \sum_{e_i} \| e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1}) - b_i \| ^2_2&lt;/script&gt;

&lt;h2 id=&quot;solve-approach&quot;&gt;Solve approach&lt;/h2&gt;
&lt;p&gt;To solve $E_{curve}$, we need &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt; w_{i+1}&lt;/script&gt; and $b_i$ for each $e_i$.&lt;/p&gt;

&lt;p&gt;For $b_i$, we are basically try to learn it from data, so that it is a &lt;strong&gt;data-driven&lt;/strong&gt; bias, that can encode style of the input dataset while we are reconstructing the surface.&lt;/p&gt;

&lt;p&gt;For &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_{i+1}&lt;/script&gt;, they are used for compute the weighted laplacian.
And I think we have two different approaches to get these values.&lt;/p&gt;

&lt;h3 id=&quot;direct-inferring&quot;&gt;direct inferring&lt;/h3&gt;
&lt;p&gt;As Nathan described in the meeting, because we can also get this values from ground truth, we can also try to learn it from data.
I put some initial results at &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/gt-laplacian-and-weights-results.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/gt-laplacian-and-weights-results.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The results looks perfect, but I am still trying to figure out why I don’t even provide a positional constraint.&lt;/p&gt;

&lt;h3 id=&quot;alternative-optimization&quot;&gt;alternative optimization&lt;/h3&gt;
&lt;p&gt;I can also use alternative optimization method, that only take inferred bias as known, and alternatively optimize the weights and $e_i$.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-opt-circle-comparison.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-opt-circle-comparison.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Oct 14, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/10/15/Oct14-meeting-note/"/>
   <updated>2015-10-15T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/10/15/Oct14-meeting-note</id>
   <content type="html">&lt;h1 id=&quot;notes&quot;&gt;Notes&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/note-20131014.png&quot; alt=&quot;meeting sketch&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;there is no need to keep both laplacian and bi-laplacian in the same time if we add &lt;strong&gt;data-driven&lt;/strong&gt; bias term.
    &lt;ul&gt;
      &lt;li&gt;In the sketch figure, basically if we keep both terms and use weights to control the local behavior, it’s basically similar to use only one term with spatial-varying bias term. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;we can get two things from ground truth (and those are things that we can possibly infer from data), please see triangle in the figure:
    &lt;ul&gt;
      &lt;li&gt;laplacian vector&lt;/li&gt;
      &lt;li&gt;weights for weighted laplacian ($w_p$ and $w_n$)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And we have two strategies to tackle this problem:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;learn all those values (3 values in 2D, including 2-dim laplacian vector, and one scalar weight ($w_p+w_n=1.0$) ).&lt;/li&gt;
  &lt;li&gt;only learn laplacian vector, and use alternative optimization to optimize $w_p$ and $w_n$.	&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Linear System</title>
   <link href="http://jdily.github.io/draft/2015/10/15/Linear-System/"/>
   <updated>2015-10-15T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/15/Linear-System</id>
   <content type="html">&lt;h2 id=&quot;detail-of-the-linear-system&quot;&gt;Detail of the linear system&lt;/h2&gt;

&lt;p&gt;For each $e_i$, we have &lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;e_i - w_{p}e_{p} - w_{n}e_{n} = b_i &lt;/script&gt;

&lt;p&gt;where $p = i-1$ and $n = i+1$.&lt;/p&gt;

&lt;p&gt;So far, I formulate the optimization in terms of $t_i$, so the previous equation can be transformed into:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; 
P_{i0}\cdot (1-t_i)+P_{i1} \cdot t_i - w_{p}\cdot (P_{p0}\cdot (1-t_p)+P_{p1}\cdot t_p) - w_{n}\cdot (P_{n0}\cdot (1-t_n)+P_{n1}\cdot t_n) 
= b_i
&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;
t_i \cdot (P_{i1} - P_{i0}) - t_p \cdot w_p \cdot (P_{p1}-P_{p0}) -  t_n \cdot w_n \cdot (P_{n1}-P_{n0}) =  b_i - P_{i0} + w_p\cdot P_{p0} + w_n\cdot P_{n0}
&lt;/script&gt;

&lt;p&gt;and all the $P_{xx}$ and $b_i$ are 2D vectors in current 2D setting.
It means we have two equations for each $t_i$, and i think it leads to an over-determined system.
So if we have $n$ unknowns (i.e. &lt;script type=&quot;math/tex&quot;&gt;t_0... t_{n-1}&lt;/script&gt;), then we will get a &lt;script type=&quot;math/tex&quot;&gt;2n\times n&lt;/script&gt; matrix $A$ before add any positional constraints (boundary condition.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Results from new optimization function</title>
   <link href="http://jdily.github.io/progress/2015/10/13/New-Energy-Result/"/>
   <updated>2015-10-13T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/13/New-Energy-Result</id>
   <content type="html">&lt;p&gt;I have the first version of a new alternative solver to solve our new optimization function.
Let me briefly re-explain what I am doing in this solver.
Here is the function:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;p&gt;Here we first define a laplacian function for each $e_i$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; \mathcal{L}(e_i) = e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1})  &lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{min} = \sum_{e_i} \mathbf{W}_1(e_i)\| \mathcal{L}(e_i) - b_i^1\| _2^2 &lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{const} =  \sum_{e_i } \mathbf{W_2}(e_i) \| \mathcal{L}(\mathcal{L}(e_i)) - b^2_i  \|_2^2 &lt;/script&gt;

&lt;h3 id=&quot;optimization-process&quot;&gt;Optimization process&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;initialize the variables ($t_i$ for each $e_i$) as 0.5.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;: check whether initial values of $t_i$ affects the results. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Use current $e_i$ to compute the weights for laplacian&lt;/li&gt;
  &lt;li&gt;Solve $e_i$ by optimizing $E_{curve}$ with know weights from step 2.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Repeat 2, 3 until converge&lt;/strong&gt;..&lt;/p&gt;

&lt;h3 id=&quot;optimization-result&quot;&gt;Optimization result.&lt;/h3&gt;
&lt;p&gt;For all the results shown below, I first set both $\mathbf{W}_1$ and $\mathbf{W}_2$ as 0.5, for every $e_i$.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please see the following results:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-bubble.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-bubble.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-circle109.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-heart298.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-heart298.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-phone.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-phone.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect1.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect1.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect2.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-rect2.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-triangle36.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/alt-solver-viz-triangle36.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Discussion&lt;/strong&gt;:&lt;br /&gt;
1. I think the visualization is not so easy to view, do you have any good suggestion to show the boundary lines clearer? (in contrast to the background shape..)&lt;br /&gt;
2. Right now we have two kinds of weights&lt;br /&gt;
	1. spatial-varying weights Alla proposed : (&lt;script type=&quot;math/tex&quot;&gt;\mathbf{W}_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathbf{W}_2&lt;/script&gt;)&lt;br /&gt;
	2. the weights for distance weighted laplacian (&lt;script type=&quot;math/tex&quot;&gt;w_{i-1}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;w_{i+1}&lt;/script&gt; and more in &lt;script type=&quot;math/tex&quot;&gt;\mathcal{L}(e_i)&lt;/script&gt;)      &lt;br /&gt;
I think we can come up some different names or notations for express them. Or it is a little bit confusing during discussion..
3. I’ll start to work on manually assign different &lt;strong&gt;spatial-varying&lt;/strong&gt; weights. &lt;br /&gt;
4. I am also interested in testing the different initialization values for each $t_i$.  &lt;br /&gt;
5. Observed from all the above examples, I found out that our thoughts about bias term might be right. &lt;br /&gt;
The reason is that for most of the new optimized results I got, their energies are lower than their ground truth’s energies.
I think this means to ``reproduce’’ the ground truth, the targets of laplacian and bi-laplacian are not perfectly zero.
(I do found out this during some tests, so if needed, I can come up some tables to show these statistics.)&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>New energy comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/09/New-Energy-comparison/"/>
   <updated>2015-10-09T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/09/New-Energy-comparison</id>
   <content type="html">&lt;p&gt;According to the discussion on Oct 07, we have to modify the function in terms of the problem mentioned in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we want to add a bias term for each data point, i.e. $b_i$, to reveal the fact that not all laplacian values from ground truth are 0..&lt;/p&gt;

&lt;h2 id=&quot;optimization-with-weighted-laplacian-ie-normalize-the-distance&quot;&gt;Optimization with weighted laplacian (i.e. normalize the distance)&lt;/h2&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;
Here we first define a laplacian function for each $e_i$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; \mathcal{L}(e_i) = e_i - (w_{i-1}^{i}e_{i-1}+w_{i+1}^{i}e_{i+1})  &lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;w_{i-1}^{i}&lt;/script&gt; denotes as weight for $e_{i-1}$ with respect to $e_i$.&lt;/p&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} \mathbf{W}_1(e_i)\| \mathcal{L}(e_i) - b_i^1\| _2^2 &lt;/script&gt;

&lt;p&gt;where $b_i^1$ is a bias value for each $e_i$, and we can learn this $b_i^1$ from data.&lt;/p&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } \mathbf{W_2}(e_i) \| \mathcal{L}(\mathcal{L}(e_i)) - b^2_i  \|_2^2 &lt;/script&gt;

&lt;p&gt;And can be expand as complicated version as follow:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (w_{i-1}^{i}e_{i-1} +w_{i+1}^{i}e_{i+1})  - ( {w}&#39;_{i-1}[e_{i-1} - (w_{i-2}^{i-1}e_{i-2} + w_{i}^{i-1}e_{i})]+ {w}&#39;_{i+1}[e_{i+1} - (w_{i}^{i+1}e_{i} + w_{i+2}^{i}e_{i+2})]  )  \|_2^2 &lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;{w}&#39;_{i+1}&lt;/script&gt; and ${w}’_{i+1}$  are respect to $\mathcal{L}(e_i)$.&lt;/p&gt;

&lt;h3 id=&quot;comparison--both-gt-and-optimized-data-from-previous-energy-on-new-energy&quot;&gt;Comparison : both gt and optimized data (from previous energy) on new energy&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bubble&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.33&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.35&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.68 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.69&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.40&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.09&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;circle109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.047&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.052&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.099&lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.69&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.61&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;heart298&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.39&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.45&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.84 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.74&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.47&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.21&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;phone-hang-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.27&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.26&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;0.53 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.44&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.21&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.65&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;rect1&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;gt (wrong gt) &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;  &lt;del&gt;0.67&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.84 &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt; 1.51&lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;optimized&lt;/del&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;del&gt;0.25 &lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.06&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;0.31 &lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;triangle36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.46&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.76&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1.22 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.83&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.94&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.77&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>Revised optimization function</title>
   <link href="http://jdily.github.io/draft/2015/10/09/Function-reformulate/"/>
   <updated>2015-10-09T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/09/Function-reformulate</id>
   <content type="html">&lt;p&gt;According to the discussion on Oct 07, we have to modify the function in terms of the problem mentioned in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we want to add a bias term for each data point, i.e. $b_i$, to reveal the fact that not all laplacian values from ground truth are 0..&lt;/p&gt;

&lt;h2 id=&quot;optimization-with-weighted-laplacian-ie-normalize-the-distance&quot;&gt;Optimization with weighted laplacian (i.e. normalize the distance)&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} \mathbf{W}_1(e_i)\| e_i - (w_{i-1}e_{i-1}+w_{i+1}e_{i+1}) - b_i\| _2^2 &lt;/script&gt;

&lt;p&gt;where $b_i$ is a bias value for each $e_i$, and we can learn this $b_i$ from data.&lt;/p&gt;

&lt;h3 id=&quot;implementation&quot;&gt;Implementation&lt;/h3&gt;

&lt;h4 id=&quot;variable-&quot;&gt;variable :&lt;/h4&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2^2 &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Oct 07, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/10/07/meeting/"/>
   <updated>2015-10-07T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/10/07/meeting</id>
   <content type="html">&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;add an normalization process in the optimization to deal with the problem described in 
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;verify the new distance weighting using ground truth examples.&lt;/li&gt;
      &lt;li&gt;implement the alternative optimization process to generate desired results.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;add a bias into both energy terms, because for most of the curves, the laplacian and bi-laplacian may not be exactly 0. (i.e. we may not really want zero in our results)
    &lt;ul&gt;
      &lt;li&gt;also, verify this from some ground truth examples, i.e. for each vertex, compute both laplacian and bi-laplacian.&lt;/li&gt;
      &lt;li&gt;and in the end we can &lt;strong&gt;learn&lt;/strong&gt; this bias as learning the prior (also, we can think about whether to keep the weights or not, because it is also kind of prior…)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;if anyone want to find the results or discussion for the original functions, please see
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/07/Weekly-summary/&quot;&gt;http://jdily.github.io/progress/2015/10/07/Weekly-summary/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Weekly summary</title>
   <link href="http://jdily.github.io/progress/2015/10/07/Weekly-summary/"/>
   <updated>2015-10-07T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/07/Weekly-summary</id>
   <content type="html">&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;This week I worked on minimizing the energy, please see the webpage at:&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/02/Optimization-draft/&quot;&gt;http://jdily.github.io/progress/2015/10/02/Optimization-draft/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And compare the results using different terms, i.e. use each term independently.
&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And I also compare the ground truth with the optimized results in terms of energy:&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/&quot;&gt;http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Still work on a potential problem of current energy, please see&lt;br /&gt;
&lt;a href=&quot;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&quot;&gt;http://jdily.github.io/draft/2015/10/06/Energy-Discussion/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>GT energy comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT/"/>
   <updated>2015-10-06T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/06/Energy-comparison-with-GT</id>
   <content type="html">&lt;h3 id=&quot;compare-energy-with-ground-truth-l2&quot;&gt;Compare energy with ground truth (L2)&lt;/h3&gt;

&lt;p&gt;I set both weighting 0.5, however, because I think the scale of two terms may not be equal.
So maybe they are not contributing equally.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;term2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bubble&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.16217&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;18.774&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;25.93617&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.13518&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.47112&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.6063&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;circle109&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7.29661&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;22.6688&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;29.96541&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.38505&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.17509&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.56014&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;heart298&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11.3842&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;36.7804&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;48.1646&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.89751&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.03962&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.93713&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;phone-hang-up&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4.8908&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;12.161&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17.0518&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.31873&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.2576&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.57633&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;rect1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.698162&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.745405&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.443567&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.309573&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.066709&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.376282&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;triangle36&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;gt &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8.25513&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;21.9114&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;30.16653&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;optimized&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 2.50129&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.12958&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5.63087&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;discussion&quot;&gt;Discussion&lt;/h3&gt;
&lt;p&gt;I think one interesting thing to think about is that, our ground truth, are not necessary be the optimal for this energy, right?
So for most cases (well, for all of these 6 examples), the optimized energies are lower than the energies from gt.&lt;/p&gt;

&lt;p&gt;One intriguing result to me is about circle109…
Both terms from gt are higher than the optimized results (which is a wavy result, please see &lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&lt;/a&gt;)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Energy discussion</title>
   <link href="http://jdily.github.io/draft/2015/10/06/Energy-Discussion/"/>
   <updated>2015-10-06T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/10/06/Energy-Discussion</id>
   <content type="html">&lt;h3 id=&quot;normalization-problem&quot;&gt;normalization problem&lt;/h3&gt;
&lt;p&gt;I think we may have problem with our current energy due to non-equal spacing.
For the local smoothing operation, i.e. only term1&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} W_1(e_i)\| e_i - (e_{i-1}+e_{i+1})/2\| _2^2 &lt;/script&gt;

&lt;p&gt;we are trying to minimize the distance of blue arrow in the figure below (i.e. minimizing curvature) by encouraging flatten.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/mini_curvature.png&quot; alt=&quot;minimize curvature&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case, straight line should minimize this energy. However, I think that only happens when the spacing is equal. &lt;/p&gt;

&lt;p&gt;If all our results (e_i’s) are lying on the same line, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jdily.github.io/images/spacing.png&quot; alt=&quot;spacing comparison&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we can see in the figure, if the spacing is not equal, then even straight line can not minimize this energy, even though the curvature is already minimized..
So I think the energy may need to be modified as taking the edge length proportion into consideration..&lt;/p&gt;

&lt;h3 id=&quot;angle-version&quot;&gt;angle version!?&lt;/h3&gt;
</content>
 </entry>
 
 <entry>
   <title>Term comparison</title>
   <link href="http://jdily.github.io/progress/2015/10/05/Term-Comparison/"/>
   <updated>2015-10-05T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/05/Term-Comparison</id>
   <content type="html">&lt;p&gt;Put some comparison for both term at &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/term%20comparison%20-%20cases.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Optimization draft</title>
   <link href="http://jdily.github.io/progress/2015/10/02/Optimization-draft/"/>
   <updated>2015-10-02T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/10/02/Optimization-draft</id>
   <content type="html">&lt;h2 id=&quot;optimization-with-spatial-varying-weights&quot;&gt;Optimization with spatial-varying weights&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve} = E_{min} + E_{const}&lt;/script&gt;

&lt;h3 id=&quot;term1--minimizing-curvature---emin--&quot;&gt;Term1 : minimizing curvature  &lt;script type=&quot;math/tex&quot;&gt; (E_{min})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i} W_1(e_i)\| e_i - (e_{i-1}+e_{i+1})/2\| _2^2 &lt;/script&gt;

&lt;h3 id=&quot;term2--keeping-curvature-constant---econst--&quot;&gt;Term2 : keeping curvature constant  &lt;script type=&quot;math/tex&quot;&gt; (E_{const})  &lt;/script&gt;&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;  \sum_{e_i } W_2(e_i) \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2^2 &lt;/script&gt;

&lt;h3 id=&quot;note&quot;&gt;Note&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Now I use square distance of 2-norm.&lt;/li&gt;
  &lt;li&gt;The only constraints I have now for each $e_i$ is $ 0 \leq e_i \leq 1$.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;experiment&quot;&gt;Experiment&lt;/h3&gt;

&lt;p&gt;To try out the optimization, I optimize different shapes and different weights combinations.&lt;/p&gt;

&lt;h4 id=&quot;uniform-weights&quot;&gt;uniform weights&lt;/h4&gt;

&lt;p&gt;In these examples, I use both weighting as 0.5, i.e. $W_1(e_i) = 0.5, W_2(e_i) = 0.5$ for each $i$. &lt;/p&gt;

&lt;p&gt;Please see the following results:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-circle109.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-rect1.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-rect1.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-heart298.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-heart298.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-triangle36.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-triangle36.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-phone.html&quot;&gt;https://www.cs.ubc.ca/~ichaos/research/nbview/solver%20viz-phone.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;spatial-varying-weights&quot;&gt;spatial-varying weights&lt;/h4&gt;

&lt;p&gt;The thing is that I tried to add anisotropic weights into the optimization, but I didn’t get reasonable results when I manually set the weights.
Most of the time, the result are just very close to the isotropic weights results.
So I did a test that randomly generate the weights for every $e_i$, and the results still looks very close, and the optimized energy from the solver are close.&lt;/p&gt;

&lt;p&gt;I am trying to find out what is the problem right now… &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Alla's note.</title>
   <link href="http://jdily.github.io/draft/2015/09/27/Alla-note/"/>
   <updated>2015-09-27T00:00:00-07:00</updated>
   <id>http://jdily.github.io/draft/2015/09/27/Alla-note</id>
   <content type="html">&lt;h2 id=&quot;variables&quot;&gt;Variables&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;br /&gt;
Think about the mid-edge and edge-end point (for deal with both corners and sides.)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
e_i = P_{i1} \times (1-t) + P_{i2}\times t, 0&lt;=t &lt;=1 %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt;&lt;br /&gt;
write more detail about each feature&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;context-free-feature&quot;&gt;Context-free feature&lt;/h3&gt;
&lt;p&gt;Encode neighbourhoods in terms of distance to subsequent left/right corners and the relative orientation of these corners.  &lt;/p&gt;

&lt;h3 id=&quot;context-feature&quot;&gt;Context feature&lt;/h3&gt;
&lt;p&gt;Contain current values of $e_i$ and X ``rings’’ of $e$ values, i.e.  (&lt;script type=&quot;math/tex&quot;&gt; ... e_{i-1}, e_i, e_{i+1}, ... &lt;/script&gt;)&lt;/p&gt;

&lt;h2 id=&quot;optimization&quot;&gt;Optimization&lt;/h2&gt;
&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt; E_{curve} =  W_{1st(e_i)}\| e_i - (e_{i-1}+e_{i+1})/2\| _0  \\
     + W_{2nd(e_i)} \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_0&lt;/script&gt; &lt;/p&gt;

&lt;p&gt;There are linearized terms for &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;minimizing curvature&lt;/li&gt;
  &lt;li&gt;keeping curvature constant&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$L_0$ aims to indicate that we want to allow some but not many places where this error is high..&lt;/p&gt;

&lt;p&gt;The algorithm would be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;compute context-free weights (generate these using CNN based on training..)  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Minimize our quadratic function (with linear inequalities):  &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt; E_{curve2} =  W_{1st(e_i)}\| e_i - (e_{i-1}+e_{i+1})/2\| _2  \\
     + W_{2nd(e_i)} \| e_i - (e_{i-1} + e_{i+1})/2  - (e_{i-1} - (e_{i-2} + e_{i})/2 + e_{i+1} - (e_{i} + e_{i+2})/2  )/2  \|_2 &lt;/script&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Update weights based on both feature vectors and $e_k$ values in an immediate neighborhood (rere rings of end-points) - i.e. compute context
based weights  (again train the network to give contextual weights)  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;repeat 2, 3 till weights/values no longer change.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Sep 23, 2015 Meeting note</title>
   <link href="http://jdily.github.io/meeting/2015/09/23/meeting/"/>
   <updated>2015-09-23T00:00:00-07:00</updated>
   <id>http://jdily.github.io/meeting/2015/09/23/meeting</id>
   <content type="html">&lt;h2 id=&quot;importants&quot;&gt;Importants&lt;/h2&gt;
&lt;p&gt;Next meeting : Sep 29 (Tue), 1:00 pm  &lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Visualization should be changed so that we can see the line clearer.&lt;/li&gt;
  &lt;li&gt;Smoothness issue
    &lt;ul&gt;
      &lt;li&gt;leverage local laplacian, i.e. describe a pixel crossing with two neighbors.&lt;/li&gt;
      &lt;li&gt;find out what we want, i.e. the optimization function.&lt;/li&gt;
      &lt;li&gt;We can 
        &lt;ul&gt;
          &lt;li&gt;use network results as initial value (i.e. using network to do the feature pattern-&amp;gt;crossing value mapping, because it’s hard to formulate as a numerical optimization.)&lt;/li&gt;
          &lt;li&gt;and do a post-optimization for smoothness (this one is easier to do optimization.)  &lt;/li&gt;
          &lt;li&gt;Also, we can try to incorporate this process into the network, as a new layer.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;The current result can be consider as first-order prediction, we can try to make the loss (objective) function complicated and try to predict some other things.&lt;/li&gt;
      &lt;li&gt;For interactive usage, if post-optimization (globally) is needed, we can only do it once a while, but not after every update.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;action-items&quot;&gt;Action Items&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;generate double feature set -&amp;gt; for reflective symmetries&lt;/li&gt;
  &lt;li&gt;Run experiment -&amp;gt; use triangle and rect to reconstruct arrow.&lt;/li&gt;
  &lt;li&gt;drafting the introduction, including notation and target optimization function.&lt;/li&gt;
  &lt;li&gt;experiment with the two step optimization including laplacian&lt;/li&gt;
  &lt;li&gt;integrate caffe model into c++&lt;/li&gt;
  &lt;li&gt;Implement the new representation and compare..&lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>Arrow result</title>
   <link href="http://jdily.github.io/progress/2015/09/22/arrow-result/"/>
   <updated>2015-09-22T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/09/22/arrow-result</id>
   <content type="html">&lt;p&gt;Hi guys, I put a new result here 
Please see 
&lt;a href=&quot;http://www.cs.ubc.ca/~ichaos/research/nbview/arrow-up.html&quot;&gt;http://www.cs.ubc.ca/~ichaos/research/nbview/arrow-up.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now I am training on a bigger dataset.&lt;/p&gt;

&lt;p&gt;ichao&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learning rate tuning</title>
   <link href="http://jdily.github.io/progress/2015/09/17/learning-rate-tuning/"/>
   <updated>2015-09-17T00:00:00-07:00</updated>
   <id>http://jdily.github.io/progress/2015/09/17/learning-rate-tuning</id>
   <content type="html">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;learning rate&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;loss&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.01&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0086047&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0098077&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0096455 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0061281 &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0057908&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0065994&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; 0.0084242&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0083152&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0074397&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0423556 &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0422975&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;font color=&quot;red&quot;&gt;0.0124222 &lt;/font&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There is one strange loss for lr=0.5.. I ran it several times, and sometimes there is one smaller value… &lt;/p&gt;

</content>
 </entry>
 

</feed>
